{"version":3,"sources":["Components/hoc/Auxiliary.js","Components/Layout/Header/Header.js","Components/Layout/Sidebar/Sidebar.js","Components/Layout/ContentWrapper/ContentWrapper.js","Containers/Layout.js","Components/UI/Loading/Loading.js","Components/Calendar/Header/Header.js","Components/Calendar/Days/Days.js","Components/UI/Button/Button.js","Components/Calendar/Cells/Cells.js","Components/UI/Modal/Backdrop/Backdrop.js","Components/UI/Modal/Modal.js","Components/Calendar/CalendarModal/AddTaskForm/AddTaskForm.js","Components/Calendar/CalendarModal/CalendarModal.js","Components/Calendar/Calendar.js","Components/Notes/AddNote/AddNote.js","Components/Notes/RemoveNote/RemoveNote.js","Components/Notes/NoteField/NoteField.js","Components/Notes/Notes.js","Components/UI/Card/Card.js","Components/UI/Search/SearchField/SearchField.js","Components/UI/Search/Search.js","Components/Weather/WeatherDashboard/WeatherDashboard.js","Components/Weather/WeatherSearchResult/WeatherSearchResult.js","Components/Weather/Weather.js","Components/Finance/InvestmentForm/InvestmentForm.js","Components/Finance/FinanceDashboard/Figure/Figure.js","Components/Finance/FinanceDashboard/Information/Information.js","Components/Finance/FinanceDashboard/Transactions/Transactions.js","Components/Finance/FinanceDashboard/FinanceDashboard.js","Components/Finance/FinanceSearchResult/FinanceSearchResult.js","Components/Finance/Finance.js","Components/UI/Table/Table.js","Components/Sports/SportsDashboard/Nba/Nba.js","Components/Sports/SportsDashboard/Soccer/Soccer.js","Components/Sports/SportsDashboard/SportsDashboard.js","Components/Sports/Scoreboard/NbaScoreboard/NbaScoreboard.js","Components/Sports/Scoreboard/SoccerScoreboard/SoccerScoreboard.js","Components/Sports/Scoreboard/NFLScoreboard/NFLScoreboard.js","Components/Sports/Scoreboard/Scoreboard.js","Components/Sports/Sports.js","axios/GET.js","axios/POST.js","axios/DEL.js","Containers/Content.js","App.js","serviceWorker.js","index.js"],"names":["auxiliary","props","children","header","className","Date","toDateString","sidebar","config","options","x","length","push","key","value","onClick","clicked","active","sideBarIcons","aria-hidden","id","contentWrapper","Layout","state","sideBarActive","sideBarChoices","sideBarClickHandler","event","clickedActive","target","getAttribute","setState","Header","Sidebar","this","ContentWrapper","React","cloneElement","viewContent","Component","loading","calendarHeader","prevMonth","dateFns","format","currentMonth","nextMonth","calendarDays","days","startDate","startOfWeek","i","addDays","button","val","btnType","calendarCells","data","staticCurrentMonth","selectedDate","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","day","date","cloneDay","compareDesc","isSameDay","taskForDay","tasks","Number","split","map","style","backgroundColor","color","task","isSameMonth","onDateClick","parse","modalHandler","class","backdrop","show","Modal","Backdrop","showModal","modalClass","transform","opacity","addTaskForm","btnDis","submit","cForm","name","targetDate","taskSubmit","formattedDate","cFormHandler","selectStyle","type","onChange","description","time","recurring","reccuringInterval","defaultValue","disabled","calendarModal","taskList","getDate","desc","interval","minus","taskDeleteHandler","btnConfig","modalView","display","view","taskSubmitHandler","text","Calendar","onDateClickHandler","nextMonthHandler","addMonths","prevMonthHandler","subMonths","toggle","modalViewHandler","filterDataBySelectedMonth","monthStr","getMonth","year","String","getFullYear","filter","CalendarModal","Days","Cells","addNote","removeNote","removeNoteFunc","noteField","selected","selectedToggle","content","notesFormHandler","nForm","onFocus","onBlur","notes","noteCards","replace","RemoveNote","NoteField","AddNote","card","cssClass","undefined","cardType","searchField","placeholder","changed","searchSubmit","search","searchResult","top","clearSearchResult","searchFormState","query","searchOnChange","dashboard","cards","propsData","dateObject","toLocaleString","weekday","month","src","icon_link","alt","weather_state_name","min_temp","max_temp","humidity","wind_speed","toFixed","predictability","locName","updated","refreshForecast","removeConfig","weatherSearchResult","title","locationType","woeid","addLocation","weather","searchData","location_type","dashboards","dash","Search","investmentForm","inputFormState","shareCount","pricePerShare","inputFormSubmit","stockSymbol","inputFormOnChange","selectedFund","figure","stroke","strokeWidth","axis","grid","ticks","size","tickLabels","fill","figData","range","dates","splice","y","close","high","low","open","opening","min","Math","max","height","width","padding","bottom","left","right","containerComponent","minDomain","maxDomain","fixLabelOverlap","tickCount","dependentAxis","labelComponent","constrainToVisibleArea","flyoutStyle","flyoutWidth","flyoutHeight","pointerWidth","pointerHeight","fontFamily","fontSize","labels","datum","slice","information","labelIndex","info","change","sign","perc","changeCss","ele","transactions","current","initial","shares_count","removeTransaction","buy_price","Figure","Information","Transactions","refreshFund","removeFund","financeSearchResult","symbol","currency","addFund","Finance","t","newSelected","stock_symbol","dataObj","transObj","table","contents","tableHeader","headers","index","toUpperCase","nba","standingsHeaders","counter","eastStandings","standings","clinched","ClinchIndicator","trim","conference","rank","team_name","Record","WinPCT","HOME","ROAD","L10","westStandings","leadersHeaders","overAllleaders","leaders","scope","player","PLAYER","stats","PTS","FG_PCT","FG3_PCT","FT_PCT","rookieLeaders","soccer","crest","team","playedGames","won","lost","draw","points","goalsFor","goalsAgainst","goalDifference","nationality","number_goals","sportsDashboard","Nba","Soccer","nbaScoreboard","each","qtrs","qtrScore","qtr","score","err","cleanQuarters","gameIDs","d","includes","game_id","team_abbr","game","game_date","tableContents","g","team_city_name","record","quarter_scores","soccerScoreboard","matches","status","matchday","home_team","fullTime","home","away_team","away","nflScoreboard","games","rem","rem_time","odds","time_date","substring","current_week","season","home_team_logo","home_team_score","away_team_logo","away_team_score","scoreboard","nfl","refreshScoreboard","sports","scoreboardDash","GET","arg","url","axios","get","POST","post","DEL","delete","del","Content","forms","calendar","finance","searchReturns","updateData","self","init","then","result","JSON","componentDidMount","formUpdateHandler","console","log","newState","formValue","formName","formField","formSubmitHandler","obj","stringify","vals","add","searchSubmitHandler","formState","newSearchReturns","r","deleteHandler","forceRefreshDataHandler","action","prevProps","views","Weather","Sports","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f4edf833.chunk.js","sourcesContent":["const auxiliary = (props) => props.children;\r\n\r\nexport default auxiliary;","import React from 'react';\r\n\r\nimport '../Layout.css';\r\n\r\nconst header = () => {\r\n    return ( \r\n        <header className=\"header black-bg\">\r\n        <div className=\"logo\"><b>LACKEY<span>WM</span></b></div>\r\n        <div className=\"nav notify-row\">   \r\n          <div className=\"date\">\r\n              {new Date().toDateString()}\r\n        </div>   \r\n        </div>\r\n        <div className=\"top-menu\">\r\n        </div>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default header;","import React from 'react';\r\n\r\n\r\nimport '../Layout.css'\r\n\r\nconst sidebar = (props) => {\r\n    const config = props.config;\r\n    let options = [];\r\n    for( let x = 0; x < config.length; x++) {\r\n        options.push(\r\n        <li key={x} value={config[x]} >\r\n          <div \r\n            value={config[x]} \r\n            onClick={props.clicked}\r\n            className={props.active === config[x] ? 'active' : ''}\r\n          >\r\n              <i value={config[x]} className={`fa fa-${props.sideBarIcons[x]}`} aria-hidden=\"true\"></i>\r\n              <span value={config[x]}>{config[x]}</span>\r\n          </div>\r\n      </li>\r\n        )\r\n    };\r\n\r\n    return ( \r\n    <aside>\r\n      <div id=\"sidebar\" className=\"nav-collapse\">\r\n        <ul className=\"sidebar-menu\" id=\"nav-accordion\">\r\n        {options}\r\n        </ul>\r\n      </div>\r\n    </aside>\r\n     );\r\n}\r\n\r\nexport default sidebar;\r\n\r\n","import React from 'react';\r\n\r\nimport '../Layout.css';\r\n\r\nconst contentWrapper = (props) => {\r\n    return ( \r\n\r\n        <section id=\"main-content\">\r\n        <section className=\"wrapper\">\r\n                {props.children}\r\n        </section>\r\n      </section>\r\n     );\r\n    }\r\n \r\nexport default contentWrapper;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../Components/hoc/Auxiliary';\r\nimport Header from '../Components/Layout/Header/Header';\r\nimport Sidebar from '../Components/Layout/Sidebar/Sidebar'; \r\nimport ContentWrapper from '../Components/Layout/ContentWrapper/ContentWrapper';\r\n\r\nclass Layout extends Component {\r\n    state = { \r\n        sideBarActive: 'Calendar',\r\n        sideBarChoices: [\r\n                        'Calendar', \r\n                        'Notes',\r\n                        'Weather',\r\n                        'Finance',\r\n                        'Sports',\r\n                        ],\r\n        sideBarIcons: [\r\n                    'calendar', 'sticky-note-o', 'sun-o', 'line-chart', 'futbol-o' // https://fontawesome.com/v4.7.0/icons/\r\n                ] \r\n      };\r\n\r\n      sideBarClickHandler = (event) => {\r\n        let clickedActive = event.target.getAttribute('value');\r\n        this.setState({\r\n            sideBarActive: clickedActive\r\n            });\r\n    };\r\n\r\n    render() { \r\n        return ( \r\n            <Aux>\r\n                <Header />\r\n                <Sidebar \r\n                    active={this.state.sideBarActive}\r\n                    config={this.state.sideBarChoices}\r\n                    clicked={this.sideBarClickHandler}\r\n                    sideBarIcons={this.state.sideBarIcons}\r\n                />\r\n                <ContentWrapper>\r\n                    {React.cloneElement(this.props.children, { viewContent: this.state.sideBarActive })}\r\n                </ContentWrapper>\r\n\r\n            </Aux>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default Layout;","import React from 'react';\r\n\r\nimport'./Loading.css';\r\n\r\nconst loading = () => (\r\n    <div>\r\n        <div className=\"loader\"><h1>LOADING</h1></div>\r\n    </div>\r\n\r\n);\r\n\r\nexport default loading;","import React from 'react';\r\nimport dateFns from \"date-fns\";\r\n\r\nimport '../Calendar.css';\r\n\r\nconst calendarHeader = (props) => {\r\n    const dateFormat = \"MMMM YYYY\"\r\n    return (\r\n      <div className=\"header row middle\">\r\n        <div className=\"col col-start\">\r\n          <span className=\"icon\" onClick={props.prevMonth}>\r\n          <i className=\"fa fa-long-arrow-left fa-2x\" aria-hidden=\"true\"></i>\r\n          </span>\r\n        </div>\r\n        <div className=\"col col-center\">\r\n          <span>{dateFns.format(props.currentMonth, dateFormat)}</span>\r\n        </div>\r\n        <div className=\"col col-end\" onClick={props.nextMonth}>\r\n          <span className=\"icon\"><i className=\"fa fa-long-arrow-right fa-2x\" aria-hidden=\"true\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n \r\nexport default calendarHeader;","import React from 'react';\r\nimport dateFns from \"date-fns\";\r\n\r\nimport '../Calendar.css';\r\n\r\nconst calendarDays = (props) => {\r\n        const dateFormat = \"dddd\";\r\n        let days = [];\r\n        \r\n        let startDate = dateFns.startOfWeek(props.currentMonth);\r\n    \r\n        for (let i = 0; i < 7; i++) {\r\n          days.push(\r\n            <div className=\"col col-center\" key={i}>\r\n              {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\r\n            </div>\r\n          );\r\n        }\r\n    \r\n        return <div className=\"days row\">{days}</div>;\r\n}\r\n \r\nexport default calendarDays;","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        value={props.val}\r\n        className={props.btnType}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport dateFns from \"date-fns\";\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport '../Calendar.css';\r\n\r\nconst calendarCells = (props) => {\r\n    //data\r\n    let data = props.data\r\n    //days\r\n    const staticCurrentMonth = props.staticCurrentMonth\r\n    const currentMonth = props.currentMonth;\r\n    const selectedDate = props.selectedDate;\r\n    const monthStart = dateFns.startOfMonth(currentMonth);\r\n    const monthEnd = dateFns.endOfMonth(monthStart);\r\n    const startDate = dateFns.startOfWeek(monthStart);\r\n    const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n    let rows = [];\r\n    let days = [];\r\n    let day = startDate;\r\n\r\n    const dateFormat = \"D\";\r\n    let date = \"\";\r\n    \r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n\r\n        date = dateFns.format(day, dateFormat);\r\n        const cloneDay = day;\r\n        let x = null; // past days\r\n        if(dateFns.compareDesc(staticCurrentMonth, day) === -1 &&\r\n        !dateFns.isSameDay(day, staticCurrentMonth)){\r\n          x = <span className=\"slash\">X</span>;\r\n        };\r\n        let taskForDay = ''\r\n        if(data.length > 0){\r\n          let tasks = [];\r\n          for(let x = 0; x < data.length; x++){\r\n            if(Number(data[x]['target_date'].split(\",\")[1]) === Number(date)){\r\n              tasks.push(data[x]);\r\n            }\r\n          };\r\n          taskForDay = tasks.map(i => {\r\n            let style = {backgroundColor: `#${i.color}`}\r\n            return <div\r\n                      className=\"cTask\"\r\n                      style={style}\r\n                      >{i.task}</div>\r\n          });\r\n        }\r\n\r\n        days.push(\r\n          <div\r\n            className={`col cell ${\r\n              !dateFns.isSameMonth(day, monthStart)\r\n                ? \"disabled\"\r\n                : dateFns.isSameDay(day, selectedDate) ? \"selected\" : ''\r\n            }`}\r\n            key={day}\r\n            onClick={() => props.onDateClick(dateFns.parse(cloneDay))}\r\n          >\r\n            <span className=\"number\">{date}</span>\r\n            {x}\r\n            <div className=\"cTaskContainer\">\r\n            {taskForDay}\r\n            </div>\r\n              <Button\r\n                btnType={'calendarBtn'}\r\n                val={date}\r\n                clicked={props.modalHandler}>\r\n                 <i class=\"fa fa-search-plus\" aria-hidden=\"true\"></i>\r\n                </Button>\r\n          </div>\r\n        );\r\n        day = dateFns.addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div className=\"row\" key={day}>\r\n          {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return <div className=\"body\">{rows}</div>;\r\n}\r\n \r\nexport default calendarCells;","import React from 'react';\r\n\r\nimport '../Modal.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"backdrop\" onClick={props.clicked}></div> : null\r\n)\r\n \r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Backdrop from './Backdrop/Backdrop';\r\n\r\nimport'./Modal.css';\r\n\r\nconst Modal = (props) => {\r\n    return ( \r\n        <Aux>\r\n        <Backdrop\r\n            show={props.showModal}\r\n            clicked={props.modalHandler}\r\n        />\r\n        <div className={props.modalClass}\r\n                style={{\r\n                    transform: props.showModal ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: props.showModal ? '1': '0'\r\n                }}\r\n                >\r\n                    {props.children}\r\n        </div>\r\n    </Aux> \r\n     );\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport Button from '../../../UI/Button/Button';\r\n\r\nimport './AddTaskForm.css';\r\n\r\nconst addTaskForm = (props) => {\r\n\r\n    let btnDis = 'disabledSubmit';\r\n    let submit = null;\r\n    if(props.cForm.name !== '' &&\r\n    props.cForm.targetDate !== ''){\r\n        btnDis = 'submit';\r\n        submit = props.taskSubmit\r\n    }\r\n\r\n    const split = props.selectedDate.split(\" \"); // add selected date to form state\r\n    const formattedDate = `${[split[1],split[2],split[3]]}`;\r\n    if(props.cForm.targetDate !== formattedDate){\r\n        props.cFormHandler({\r\n            target: {\r\n                value: formattedDate,\r\n                id: \"targetDate\",\r\n                name: \"calendar\"\r\n            }\r\n        });\r\n    };\r\n\r\n    let selectStyle = {backgroundColor: `#${props.cForm.color}`}\r\n    return ( \r\n        <fieldset>\r\n\r\n                <label>\r\n                    <span>Task:<span className=\"req\">*</span></span>\r\n                    <input \r\n                        type=\"text\"\r\n                        value={props.cForm.name}\r\n                        name=\"calendar\"\r\n                        id=\"name\"\r\n                        onChange={props.cFormHandler}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <span>Description:</span>\r\n                    <textarea \r\n                        type=\"text\"\r\n                        value={props.cForm.description}\r\n                        name=\"calendar\"\r\n                        id=\"description\"\r\n                        onChange={props.cFormHandler}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <span>Time:</span>\r\n                    <input \r\n                        type=\"text\"\r\n                        value={props.cForm.time}\r\n                        name=\"calendar\"\r\n                        id=\"time\"\r\n                        onChange={props.cFormHandler}\r\n                    />\r\n                </label>\r\n            \r\n                <label>\r\n                <span>Recurring?</span>\r\n                    <input \r\n                        type=\"checkbox\"\r\n                        value={props.cForm.recurring}\r\n                        name=\"calendar\"\r\n                        id=\"recurring\"\r\n                        onChange={props.cFormHandler}\r\n                    />\r\n                </label>\r\n\r\n                {props.cForm.recurring ? \r\n                <label>\r\n                    <span>Interval (days):<span className=\"req\">*</span></span>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={props.cForm.reccuringInterval}\r\n                        name=\"calendar\"\r\n                        id=\"interval\"\r\n                        defaultValue={7}\r\n                        onChange={props.cFormHandler}\r\n                    />\r\n                    </label>   \r\n                    : null  \r\n            }\r\n\r\n            <label>\r\n            <span>Color-code: </span>\r\n\r\n            <select \r\n                value={props.cForm.color}\r\n                style={selectStyle}\r\n                name=\"calendar\"\r\n                id=\"color\"\r\n                onChange={props.cFormHandler}>\r\n                <option id=\"1\" value=\"4ecdc4\"></option>\r\n                <option id=\"2\" value=\"3CB371\"></option>\r\n                <option id=\"3\" value=\"F08080\"></option>\r\n                <option id=\"4\" value=\"9370DB\"></option>\r\n                <option id=\"5\" value=\"C0C0C0\"></option>\r\n            </select>\r\n            </label>\r\n\r\n                    <label>\r\n                    <Button\r\n                        value={'addTask'}\r\n                        disabled={btnDis}\r\n                        btnType={btnDis}\r\n                        clicked={submit}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    </label>\r\n        </fieldset>\r\n        \r\n     );\r\n}\r\n \r\nexport default addTaskForm;","import React from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\nimport AddTaskForm from './AddTaskForm/AddTaskForm';\r\n\r\nimport '../Calendar.css'\r\n\r\nconst calendarModal = (props) => {\r\n    let selectedDate = props.date;\r\n    //props.taskList\r\n    let taskList = null;\r\n    let data = props.data;\r\n    if(data.length > 0){\r\n        let tasks = [];\r\n        for(let x = 0; x < data.length; x++){\r\n          if(Number(data[x]['target_date'].split(\",\")[1]) === Number(selectedDate.getDate())){\r\n            tasks.push(data[x]);\r\n          }\r\n        };\r\n        taskList = tasks.map(i => {\r\n            let desc = i.description !== \"\" ? \r\n            <li className=\"taskContainerLi\"><b>Description: </b>{i.description}</li> : null;\r\n            let time = i.time !== \"\" ?\r\n             <li className=\"taskContainerLi\"><b>Scheduled time: </b>{i.time}</li> : null;\r\n            let recurring = i.recurring !== \"False\" ? \r\n            <li className=\"taskContainerLi\">Scheduled to occur every {i.interval} days.</li> : null;\r\n            let minus = <div><b>X</b></div>\r\n\r\n            return <Aux>\r\n            <div className=\"taskContainer\" key={i.id} >\r\n            <Button\r\n                val={i.id}\r\n                disabled={false}\r\n                btnType={'deleteTask'}\r\n                clicked={props.taskDeleteHandler}>\r\n                    {minus}\r\n            </Button>\r\n                    <div className=\"taskList\">{i.task}</div> \r\n                    </div>\r\n                    <ul>\r\n                        {desc}\r\n                        {time}\r\n                        {recurring}\r\n                    </ul>\r\n                </Aux>\r\n        });\r\n      }\r\n\r\n    let btnConfig = {\r\n        'value': 'add',\r\n        'type': 'addCalendar',\r\n        'clicked': props.modalView,\r\n        'text': <i value={'add'} className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n    }\r\n\r\n    let display = '';\r\n    if (props.view === 'list'){\r\n        display = taskList;\r\n    }else{\r\n        display = \r\n            <AddTaskForm\r\n                    //data \r\n                    cForm={props.cForm}\r\n                    selectedDate={selectedDate.toDateString()}\r\n                    //hanlder\r\n                    cFormHandler={props.cFormHandler}\r\n                    taskSubmit={props.taskSubmitHandler}\r\n                />\r\n        btnConfig.text =  <i value={btnConfig.value} className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n    }\r\n    return (\r\n        <div className=\"modalField\">\r\n\r\n            <div className=\"row\">\r\n                <h1 className=\"title\">{props.date.toDateString()}</h1>    \r\n                <Button\r\n                    value={btnConfig.value}\r\n                    btnType={btnConfig.type}\r\n                    clicked={btnConfig.clicked}>\r\n                    {btnConfig.text}\r\n            </Button>   \r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                {display}\r\n            </div>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default calendarModal;","import React from \"react\";\nimport dateFns from \"date-fns\";\n\nimport Header from './Header/Header';\nimport Days from './Days/Days';\nimport Cells from './Cells/Cells';\nimport Modal from '../UI/Modal/Modal';\nimport CalendarModal from './CalendarModal/CalendarModal';\n\nimport './Calendar.css';\n\nclass Calendar extends React.Component {\n  state = {\n    showModal: false,\n    modalView: 'list',\n    currentMonth: new Date(),\n    selectedDate: new Date(),\n    staticCurrentMonth: new Date(),\n  };\n\n  onDateClickHandler = day => {\n    this.setState({\n      selectedDate: day\n    });\n  };\n\n  nextMonthHandler = () => {\n    this.setState({\n      currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\n    });\n  };\n\n  prevMonthHandler = () => {\n    this.setState({\n      currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\n    });\n  };\n\n  modalHandler = () => {\n    let toggle = this.state.showModal ? false : true;\n    this.setState({\n      showModal: toggle,\n      modalView: 'list'\n    })\n  }\n\n  modalViewHandler = () => {\n    let toggle = this.state.modalView === 'list' ? 'form' : 'list';\n    this.setState({\n      modalView: toggle\n    })\n  }\n\n  filterDataBySelectedMonth = (data, currentMonth) => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let monthStr = months[currentMonth.getMonth()]\n    let year = String(currentMonth.getFullYear());\n\n    if(data !== ''){\n      data = data.filter(i => {\n        return data = i['target_date'].split(\",\")[0] === monthStr && \n        i['target_date'].split(\",\")[2] === year\n      });\n    }\n    return data\n  }\n\n  render() {\n    const data = this.filterDataBySelectedMonth(this.props.data, this.state.currentMonth);\n    return (\n          <main>\n            <Modal\n                //data\n                modalClass={\"modal\"}\n                showModal={this.state.showModal}\n                //handler\n                  modalHandler={this.modalHandler}>\n                    <CalendarModal \n                      //data\n                      data={data}\n                      date={this.state.selectedDate}\n                      view={this.state.modalView}\n                      cForm={this.props.cForm}\n                      //handler\n                      modalView={this.modalViewHandler}\n                      cFormHandler={this.props.cFormHandler}\n                      taskSubmitHandler={this.props.taskSubmitHandler}\n                      taskDeleteHandler={this.props.taskDeleteHandler}\n                    >\n                    </CalendarModal>\n                </Modal>\n            \n            <div className=\"calendar\">\n                <Header\n                  //data\n                  currentMonth={this.state.currentMonth}\n                  //handlers\n                  prevMonth={this.prevMonthHandler}\n                  nextMonth={this.nextMonthHandler}\n               /> \n                <Days \n                  currentMonth={this.state.currentMonth}\n                />\n\n                <Cells \n                  data={data}\n                  currentMonth={this.state.currentMonth}\n                  staticCurrentMonth={this.state.staticCurrentMonth}\n                  selectedDate={this.state.selectedDate}\n                  //handlers\n                  onDateClick={this.onDateClickHandler}\n                  modalHandler={this.modalHandler}\n                />\n            </div>\n        </main>\n    );\n  }\n}\n\nexport default Calendar;\n","import React from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport '../Notes.css';\r\n\r\nconst addNote = (props) => {\r\n    return ( \r\n        <Button\r\n            btnType={'addNote'}\r\n            clicked={props.addNote}\r\n        ><i className=\"fa fa-plus-square fa-3x\" aria-hidden=\"true\"></i></Button>\r\n     );\r\n}\r\n \r\nexport default addNote;","import React from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst removeNote = (props) => {\r\n    return ( \r\n        <Button \r\n            clicked={props.removeNoteFunc} \r\n            val={props.id}\r\n            btnType={'deleteTask'}>\r\n                X\r\n        </Button>\r\n     );\r\n}\r\n \r\nexport default removeNote;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\n\r\nimport '../Notes.css';\r\n\r\nclass noteField extends Component {\r\n    state = { \r\n        selected: false,\r\n    };\r\n    \r\n    selectedToggle = () => {\r\n        let toggle = this.state.selected ? false : true;    \r\n        if(toggle){\r\n            let content = this.props.content;\r\n            let id = this.props.id;\r\n            let color = this.props.color;\r\n            this.props.notesFormHandler({\r\n                target: {\r\n                    value: content,\r\n                    id: 'text',\r\n                    name: 'notes'\r\n                }\r\n            });\r\n            this.props.notesFormHandler({\r\n                target: {\r\n                    value: id,\r\n                    id: 'id',\r\n                    name: 'notes'\r\n                }\r\n            });\r\n            this.props.notesFormHandler({\r\n                target: {\r\n                    value: color,\r\n                    id: 'color',\r\n                    name: 'notes'\r\n                }\r\n            });\r\n        };\r\n        this.setState({\r\n            selected: toggle\r\n        });\r\n        return true\r\n    };\r\n    \r\n    addNote = () => {\r\n        this.selectedToggle()\r\n        this.props.addNote();\r\n    }\r\n\r\n    render() {\r\n        let content = this.state.selected ? this.props.nForm.text : this.props.content;\r\n        let selectStyle = this.state.selected ? {backgroundColor: `#${this.props.nForm.color}`} : {backgroundColor: `#${this.props.color}`};\r\n        return ( \r\n            <Aux>\r\n                <select \r\n                    className=\"note-color\"\r\n                    value={this.props.nForm.color}\r\n                    style={selectStyle}\r\n                    name=\"notes\"\r\n                    id=\"color\"\r\n                    onFocus={this.selectedToggle}\r\n                    onBlur={this.addNote}\r\n                    onChange={this.props.notesFormHandler}>\r\n                <option id=\"1\" value=\"F0E68C\"></option>\r\n                <option id=\"2\" value=\"4ecdc4\"></option>\r\n                <option id=\"3\" value=\"F08080\"></option>\r\n                <option id=\"4\" value=\"9370DB\"></option>\r\n                <option id=\"5\" value=\"3CB371\"></option>\r\n            </select>\r\n                <textarea\r\n                    id=\"text\"\r\n                    name=\"notes\"\r\n                    className=\"ta-field\"\r\n                    onFocus={this.selectedToggle}\r\n                    onBlur={this.addNote}\r\n                    onChange={this.props.notesFormHandler}\r\n                    value={content} \r\n                /> \r\n            </Aux>\r\n         );\r\n    }\r\n}\r\n \r\nexport default noteField;","import React from 'react';\r\n\r\nimport Aux from '../hoc/Auxiliary';\r\nimport AddNote from './AddNote/AddNote';\r\nimport RemoveNote from './RemoveNote/RemoveNote';\r\nimport NoteField from './NoteField/NoteField';\r\n\r\nconst notes = (props) => {\r\n    const data = props.data;\r\n    let noteCards = data.length <= 0 ? null :\r\n    data.map(i => {\r\n            let color = {backgroundColor: `#${i.color}`}\r\n            let content = i.text.replace(/newline/g, '\\n');\r\n            return <div className=\"notes\" style={color}>\r\n                            <RemoveNote \r\n                                id={i.id}\r\n                                removeNoteFunc={props.removeNote}\r\n                            />\r\n                            <NoteField\r\n                                id={i.id}\r\n                                content={content}\r\n                                color={i.color}\r\n                                nForm={props.nForm}\r\n                                //handlers\r\n                                notesFormHandler={props.notesFormHandler}\r\n                                addNote={props.addNote}\r\n                            />\r\n                    </div>\r\n        });\r\n    return ( \r\n        <Aux>\r\n            <AddNote\r\n                addNote={props.addNote}\r\n            />\r\n            {noteCards}\r\n        </Aux>\r\n     );\r\n}\r\n \r\nexport default notes;","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst card = (props) => {\r\n    let cssClass = props.cardType !== undefined ? props.cardType : \"card\";\r\n    let header = props.header !== 'null' ? \r\n    <div className=\"card-header\">{props.header}</div> :\r\n    null;    return ( \r\n        <div className={cssClass}>\r\n            {header}\r\n            <div className=\"card-content\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default card;","import React from 'react';\r\n\r\nimport Button from '../../Button/Button';\r\n\r\nimport './SearchField.css';\r\n\r\nconst searchField = (props) => {\r\n    return (               \r\n    <div className=\"search\">\r\n       <input \r\n            type=\"text\" \r\n            className=\"search-term\" \r\n            name={props.name} \r\n            id={props.id}  \r\n            placeholder=\"Search...\"\r\n            value={props.val} \r\n            onChange={props.changed} \r\n          />\r\n          <Button\r\n               btnType={\"search-btn\"}\r\n               clicked={props.searchSubmit}>\r\n               <i class=\"fa fa-search\"></i> \r\n          </Button>  \r\n    </div>\r\n     );\r\n}\r\n \r\nexport default searchField;\r\n","import React from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Card from '../Card/Card';\r\nimport Button from '../Button/Button';\r\nimport SearchField from './SearchField/SearchField';\r\n//import SearchResult from '../../Weather/WeatherSearch/WeatherResult/WeatherResult';\r\n\r\nconst search = (props) => {\r\n    let searchResult = props.searchResult;\r\n    let top = searchResult !== null ? \r\n        <Button btnType={'submit'} clicked={props.clearSearchResult}>Clear</Button> \r\n        :                \r\n        <SearchField \r\n            name={'search'}\r\n            id={'query'}\r\n            val={props.searchFormState.query}\r\n            // handlers\r\n            changed={props.searchOnChange}\r\n            searchSubmit={props.searchSubmit}\r\n        />;\r\n    return ( \r\n        <Card\r\n            cardType={'search'}\r\n            header={\r\n                <Aux>\r\n                    {top}\r\n                </Aux>\r\n        }>\r\n         {searchResult}\r\n        </Card>\r\n\r\n     );\r\n}\r\n \r\nexport default search;\r\n","import React from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Card from '../../UI/Card/Card';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport './WeatherDashboard.css';\r\n\r\nconst dashboard = (props) => {\r\n    let data = props.propsData;\r\n    let cards = data.map(i => {\r\n        let dateObject = new Date(i.date);\r\n        let day = dateObject.toLocaleString('en-us', {  weekday: 'short' });\r\n        let month = dateObject.toLocaleString('en-us', { month: 'short' });\r\n        let date = dateObject.getDate();\r\n        return <Card\r\n                    cardType={'weatherDay'}\r\n                    header={\r\n                        <Aux>\r\n                        <img className=\"icon\" src={i.icon_link} alt=\"\" />\r\n                        <div className=\"date-title\">{day} {month} {date}</div>\r\n                        </Aux>\r\n                    }>\r\n                    <div className=\"centered\">\r\n                    <div className=\"data-title\">{i.weather_state_name}</div>\r\n                    <div className=\"text\"><span className=\"data\">{i.min_temp}</span>°F - <span className=\"data\">{i.max_temp}</span>°F</div>\r\n                    <div className=\"text\">Humidity: <span className=\"data\">{i.humidity}</span>%</div>\r\n                    <div className=\"text\">Wind Speed: <span className=\"data\">{i.wind_speed.toFixed(2)}</span> MPH</div>\r\n                    <div className=\"text\">Predictability: <span className=\"data\">{i.predictability}</span>%</div>\r\n                    </div>\r\n                </Card>\r\n    })\r\n    return ( \r\n        <Aux>\r\n            <h3 className=\"dash-title\">{props.locName}</h3>\r\n            <div className=\"dash-container\">\r\n                <div className=\"grid\">\r\n                    {cards}\r\n                </div>\r\n            </div>\r\n            <span className=\"text\">Last Updated: {props.updated}</span>\r\n            <Button btnType={\"submit\"} clicked={props.refreshForecast} val={props.locName}>Refresh</Button>\r\n            <Button btnType={\"remove\"} clicked={props.removeConfig} val={props.locName}>Remove</Button>\r\n        </Aux>\r\n     );\r\n}\r\n \r\nexport default dashboard;","import React from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport './WeatherSearchResult.css';\r\n\r\n/// title, location_type, woeid\r\nconst weatherSearchResult = (props) => {\r\n    return ( \r\n        <div className=\"result\">\r\n            <p className=\"name\">{props.title}</p>\r\n            <p className=\"locationType\">{props.locationType}</p>\r\n            <p>\r\n            <Button\r\n                val={[props.title, props.woeid]}\r\n                clicked={props.addLocation}\r\n                btnType={\"addLoc\"}>\r\n                    <div><b>+</b></div>\r\n            </Button>\r\n            </p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default weatherSearchResult;","import React from 'react';\r\n\r\nimport Aux from '../hoc/Auxiliary';\r\nimport Search from '../UI/Search/Search';\r\nimport Dashboard from './WeatherDashboard/WeatherDashboard';\r\nimport SearchResult from './WeatherSearchResult/WeatherSearchResult';\r\n\r\nconst weather = (props) => {\r\n    const data = props.data;\r\n    const searchData = props.searchData;\r\n\r\n    let searchResult = searchData.length >= 1 ? searchData.map(i => {\r\n        return <SearchResult\r\n                    title={i.title}\r\n                    locationType={i.location_type}\r\n                    woeid={i.woeid}\r\n                    addLocation={props.addLocation}\r\n                />\r\n    }) : null;\r\n\r\n    let dashboards = null;\r\n    if(data !== \"None\" &&\r\n    searchResult === null){\r\n        dashboards = [];\r\n        for(let key in data){\r\n            let dash = <Dashboard\r\n                            locName={key}\r\n                            propsData={data[key]}\r\n                            updated={data[key][0]['entered_date']}\r\n                            // handlers\r\n                            refreshForecast={props.refreshForecast}\r\n                            removeConfig={props.removeConfig}\r\n                        />\r\n            dashboards.push(dash);\r\n        }\r\n    }\r\n    return ( \r\n        <Aux>\r\n            <Search\r\n                searchFormState={props.searchFormState}\r\n                searchResult={searchResult}\r\n                // handlers\r\n                searchOnChange={props.searchOnChange}\r\n                searchSubmit={props.searchSubmit}\r\n                clearSearchResult={props.searchSubmit}\r\n            />\r\n        {dashboards}\r\n        </Aux>\r\n     );\r\n}\r\n \r\nexport default weather;\r\n","import React from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport './InvestmentForm.css';\r\n\r\nconst investmentForm = (props) => {\r\n    \r\n    let btnDis = 'disabledSubmit';\r\n    let submit = null;\r\n    if(props.inputFormState.shareCount !== '' &&\r\n    props.inputFormState.pricePerShare !== '' &&\r\n    props.inputFormState.date !== ''){\r\n        btnDis = 'submit';\r\n        submit = props.inputFormSubmit;\r\n    };\r\n    if(props.inputFormState.stockSymbol === '' && props.active){\r\n        props.inputFormOnChange({\r\n            target: {\r\n                value: props.selectedFund,\r\n                id: \"stockSymbol\",\r\n                name: \"finance\"\r\n            }\r\n            });\r\n    };\r\n    return ( \r\n        <fieldset>\r\n                <h3>{props.selectedFund}</h3>\r\n                <label>\r\n                    <span>Number of Shares:<span className=\"req\">*</span></span>\r\n                    <input \r\n                        type=\"number\"\r\n                        value={props.inputFormState.shareCount}\r\n                        name=\"finance\"\r\n                        id=\"shareCount\"\r\n                        onChange={props.inputFormOnChange}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <span>Price per share:<span className=\"req\">*</span></span>\r\n                    <input \r\n                        type=\"number\"\r\n                        value={props.inputFormState.pricePerShare}\r\n                        name=\"finance\"\r\n                        id=\"pricePerShare\"\r\n                        onChange={props.inputFormOnChange}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <span>Price per share:<span className=\"req\">*</span></span>\r\n                    <input \r\n                        type=\"date\"\r\n                        value={props.inputFormState.date}\r\n                        name=\"finance\"\r\n                        id=\"date\"\r\n                        onChange={props.inputFormOnChange}\r\n                    />\r\n                </label>\r\n\r\n                    <label>\r\n                    <Button\r\n                        value={'addTask'}\r\n                        disabled={btnDis}\r\n                        btnType={btnDis}\r\n                        clicked={submit}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    </label>\r\n        </fieldset>\r\n     );\r\n}\r\n \r\nexport default investmentForm;","import React from 'react';\r\nimport { \r\n        VictoryLine, \r\n        VictoryChart, \r\n        VictoryAxis, \r\n        VictoryTooltip,\r\n        VictoryVoronoiContainer\r\n        } from 'victory';\r\n\r\n\r\nconst figure = (props) => {\r\n    const data = props.data;\r\n    \r\n    const style = {\r\n        data: { stroke: \"#DC143C\", strokeWidth: 3 },\r\n        axis: {stroke: \"#f5f5f5\", strokeWidth: 3 },\r\n        grid : { stroke: \"#797979\", strokeWidth: 1},\r\n        ticks: {stroke: \"#f5f5f5\", size: 5},\r\n        tickLabels: {fill: \"#f5f5f5\"}\r\n    }\r\n\r\n    let figData = [];\r\n    let range = [];\r\n    let dates = [];\r\n    data.map(i => {\r\n        figData.splice(0, 0,{\r\n            x: i.date, \r\n            y: i.close, \r\n            date: i.date,\r\n            high: i.high,\r\n            low: i.low,\r\n            open: i.opening,\r\n            close: i.close})\r\n        range.push(i.close);\r\n        dates.push(i.date);\r\n            }\r\n    );\r\n\r\n    let min = Math.min(...range) * .90;\r\n    let max = Math.max(...range) * 1.10;\r\n    \r\n    return ( \r\n        <VictoryChart\r\n            height={230}\r\n            width={400}\r\n            padding={{ top: 10, bottom: 0, left: 35, right: 0 }}\r\n            containerComponent={\r\n                <VictoryVoronoiContainer />}\r\n            minDomain={{ y: min }}\r\n            maxDomain={{ y: max }}\r\n        >\r\n            <VictoryAxis \r\n                fixLabelOverlap\r\n                style={style}\r\n                />\r\n            <VictoryAxis \r\n                tickCount={10}\r\n                dependentAxis\r\n                style={style}\r\n            />\r\n            <VictoryLine\r\n                labelComponent={\r\n                <VictoryTooltip \r\n                    constrainToVisibleArea\r\n                    flyoutStyle={{ stroke: \"#4ecdc4\", strokeWidth: 2.5 }}\r\n                    flyoutWidth={110}\r\n                    flyoutHeight={55}\r\n                    pointerWidth={10}\r\n                    pointerHeight={5}\r\n                    padding={0}\r\n                    style={{ fill: \"black\", fontFamily: 'Ruda, sansSerif', fontSize:13, padding: 0}}\r\n                 />}\r\n                labels={({ datum }) => \r\n                `Close: ${datum.y}\\nDate: ${String(datum.date).slice(0,10)}\\nTime: ${String(datum.date).slice(11,16)}`}\r\n                style={style}\r\n                data={figData}\r\n                x=\"x\"\r\n                y=\"y\"\r\n            />\r\n        </VictoryChart>\r\n     );\r\n}\r\n \r\nexport default figure;","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxiliary';\r\n\r\nimport '../FinanceDashboard.css';\r\n\r\nconst information = (props) => {\r\n    const data = props.data;\r\n    const labels = ['Current Price', 'Previous Price', 'Past Price'];\r\n    let labelIndex = 0;\r\n    let info = [];\r\n    for(let x = 0; x < data.length; x++){\r\n        let change = data[x].change.split(',');\r\n        let sign= change[0];\r\n        let perc = change[1];\r\n        let changeCss = sign === '+' ? \"increase\" : \"decrease\";\r\n        let ele = <div className=\"info-container\">\r\n                        <p><u><strong>{labels[labelIndex]}</strong></u></p>\r\n                        <p>{data[x].date}</p>\r\n                        <p>Close: <strong>{data[x].close}</strong> <span className={changeCss}> {perc}{sign}</span>%</p>\r\n                        {data[x].opening === data[x].close ? null : <p>Open: <strong>{data[x].opening}</strong></p>}\r\n                        {data[x].high === data[x].close ? null : <p>High: <strong>{data[x].high}</strong></p>}\r\n                        {data[x].low === data[x].close ? null : <p>Low: <strong>{data[x].close}</strong></p>}\r\n                    </div>\r\n            info.push(ele);\r\n            labelIndex = labelIndex === 2 ? 2 : labelIndex += 1;\r\n    }\r\n    return ( \r\n        <Aux>\r\n            {info}\r\n        </Aux>\r\n     );\r\n}\r\n \r\nexport default information;","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Button from '../../../UI/Button/Button';\r\n\r\nimport '../FinanceDashboard.css';\r\n\r\nconst transactions = (props) => {\r\n    const data = props.data;\r\n    let transactions = \r\n        <div className=\"info-container\">\r\n            <p><u><strong>No Transactions</strong></u></p>\r\n        </div>\r\n    if(data.length > 0){\r\n        transactions = [];\r\n        for(let x = 0; x < data.length; x++){\r\n            if(data[x]['type'] === 'total'){\r\n                let change = data[x].change.split(',');\r\n                let sign= change[0];\r\n                let perc = change[1];\r\n                let changeCss = sign === '+' ? \"increase\" : \"decrease\";\r\n                let ele = \r\n                <div className=\"total-container\">\r\n                    <p><u><strong>Total</strong></u></p>\r\n                    <p>Current Value: $<strong>{data[x].current}</strong></p>\r\n                    <p>Initial Value: $<strong>{data[x].initial}</strong></p>\r\n                    <p>Performance: <span className={changeCss}> {perc}{sign}</span>%</p>\r\n                    <p>Total Shares Owned: <strong>{data[x].shares_count}</strong></p>\r\n                </div>\r\n                transactions.push(ele)\r\n            }else{\r\n                let change = data[x].change.split(',');\r\n                let sign= change[0];\r\n                let perc = change[1];\r\n                let changeCss = sign === '+' ? \"increase\" : \"decrease\";\r\n                let ele =\r\n                <div className=\"info-container\">\r\n                    <Button \r\n                        clicked={props.removeTransaction} \r\n                        val={`transaction=${data[x].id}`}\r\n                        btnType={'deleteTask'}>\r\n                        <i val={`transaction=${data[x].id}`} className=\"fa fa-minus\" aria-hidden=\"true\" />\r\n                        </Button>\r\n                    <p><u><strong>{data[x].date}</strong></u></p>\r\n                    <p>Buy Price: $<strong>{data[x].initial}</strong></p>\r\n                    <p>Current Value: $<strong>{data[x].current}</strong></p>\r\n                    <p>Performance: <span className={changeCss}> {perc}{sign}</span>%</p>\r\n                    <p>Per Share: $<strong>{data[x].buy_price}</strong></p>\r\n                    <p>Shares: <strong>{data[x].shares_count}</strong></p>\r\n                </div>\r\n                transactions.push(ele)\r\n            }\r\n        }\r\n    };\r\n    return ( \r\n        <Aux>\r\n            {transactions}\r\n        </Aux>\r\n     );\r\n}\r\n \r\nexport default transactions;","import React from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\nimport Card from '../../UI/Card/Card';\r\nimport Figure from './Figure/Figure';\r\nimport Information from './Information/Information';\r\nimport Transactions from './Transactions/Transactions';\r\n\r\nimport './FinanceDashboard.css';\r\n\r\nconst dashboard = (props) => {\r\n    return ( \r\n        <Aux>\r\n        <h3 className=\"dash-title\">{props.title}</h3>\r\n            <div className=\"f-container\">\r\n                <div className=\"figure-container\">\r\n                    <Figure \r\n                        data={props.data}\r\n                        key={props.title}\r\n                    /> \r\n                </div>\r\n                <Card cardType=\"data-container\"\r\n                    header={<div className=\"head-sub\">\r\n                        <div className=\"c-title\">Information</div>\r\n                        </div>}\r\n                >\r\n                    <Information\r\n                        data={props.data}\r\n                    />\r\n                </Card>\r\n                <Card cardType=\"trans-container\"\r\n                    header={\r\n                        <div className=\"head-sub\">\r\n                            <div className=\"c-title\">Transactions</div>\r\n                        <Button btnType={\"submit\"} val={props.title} clicked={props.modalHandler}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></Button>\r\n                        </div>}\r\n                >\r\n                    <Transactions\r\n                        data={props.transactions}\r\n                        removeTransaction={props.removeTransaction}\r\n                    />\r\n                </Card>\r\n            </div>\r\n            <span className=\"text\">Last Updated: {props.updated}</span>\r\n            <Button btnType={\"submit\"} clicked={props.refreshFund} val={props.title}>Refresh</Button>\r\n            <Button btnType={\"remove\"} clicked={props.removeFund} val={`config=${props.title}`}>Remove</Button>\r\n          </Aux>\r\n     );\r\n}\r\n \r\nexport default dashboard;","import React from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport './FinanceSearchResult.css';\r\n\r\nconst financeSearchResult = (props) => {\r\n    return ( \r\n        <div className=\"result\">\r\n            <p className=\"name\">{props.name}</p>\r\n            <p className=\"text\">{props.symbol}</p>\r\n            <p className=\"text\">{props.type}</p>\r\n            <p className=\"text\">{props.currency}</p>\r\n            <p>\r\n            <Button\r\n                val={[props.symbol, props.name]}\r\n                clicked={props.addFund}\r\n                btnType={\"addLoc\"}>\r\n                    <div><b>+</b></div>\r\n            </Button>\r\n            </p>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default financeSearchResult;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../hoc/Auxiliary';\r\nimport Search from '../UI/Search/Search';\r\nimport Modal from '../UI/Modal/Modal';\r\nimport InvestmentForm from './InvestmentForm/InvestmentForm';\r\nimport Dashboard from './FinanceDashboard/FinanceDashboard';\r\nimport SearchResult from './FinanceSearchResult/FinanceSearchResult';\r\n\r\n\r\nclass Finance extends Component {\r\n    state = { \r\n        showModal: false,\r\n        selected: ''\r\n    }\r\n\r\n    modalHandler = (t) => {\r\n        let toggle = this.state.showModal ? false : true;\r\n        let newSelected = this.state.selected === '' ? t.target.value : '';\r\n        this.setState({\r\n          showModal: toggle,\r\n          selected: newSelected\r\n        })\r\n      }\r\n    \r\n    render() {\r\n        const data = this.props.data;\r\n        const searchData = this.props.searchData;\r\n    \r\n        let searchResult = searchData.length >= 1 ? searchData.map(i => {\r\n            return <SearchResult\r\n                        symbol={i.stock_symbol}\r\n                        name={i.name}\r\n                        type={i.type}\r\n                        currency={this.props.currency}\r\n                        addFund={this.props.addFund}\r\n                    />\r\n        }) : null; \r\n    \r\n        let dash = null;\r\n        if(data !== 'None' &&\r\n        searchResult === null){\r\n            dash = []\r\n            let dataObj = data['data'];\r\n            let transObj = data['transactions'];\r\n            for(let key in dataObj){\r\n                let ele = \r\n                <Dashboard\r\n                    title={key}\r\n                    data={dataObj[key]}\r\n                    transactions={transObj[key]}\r\n                    updated={dataObj[key][0]['entered_date']}\r\n                    refreshFund={this.props.refreshFund}\r\n                    removeFund={this.props.removeFund}\r\n                    modalHandler={this.modalHandler}\r\n                    removeTransaction={this.props.removeTransaction}\r\n                />\r\n                dash.push(ele)\r\n                }\r\n        }     \r\n        return ( \r\n            <Aux>\r\n                <Modal \r\n                    modalClass={\"modal\"}\r\n                    showModal={this.state.showModal}\r\n                    modalHandler={this.modalHandler}>\r\n                        <InvestmentForm \r\n                            inputFormState={this.props.inputFormState}\r\n                            selectedFund={this.state.selected}\r\n                            active={this.state.showModal}\r\n                            //handlers\r\n                            inputFormOnChange={this.props.inputFormOnChange}\r\n                            inputFormSubmit={this.props.inputFormSubmit}\r\n                        />\r\n                </Modal>\r\n                <Search\r\n                    searchFormState={this.props.searchFormState}\r\n                    searchResult={searchResult}\r\n                    //handlers\r\n                    searchOnChange={this.props.searchOnChange}\r\n                    searchSubmit={this.props.searchSubmit}\r\n                    clearSearchResult={this.props.searchSubmit}\r\n                />\r\n                {dash}\r\n        </Aux>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Finance;","import React from 'react'\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\n\r\nimport './Table.css'\r\n\r\nconst table = (props) => {\r\n    let contents = props.contents;\r\n    let headers = props.headers; // array \r\n    let tableHeader = headers.map((key, index) => {\r\n        return <th key={index}>{key.toUpperCase()}</th>\r\n    })\r\n    return ( \r\n        <Aux>\r\n            <div className=\"master\">{props.title}</div>\r\n        <table>\r\n           <tbody>\r\n               {tableHeader}\r\n              {contents}\r\n           </tbody>\r\n        </table>\r\n        </Aux>\r\n     );\r\n}\r\n \r\nexport default table;","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Table from '../../../UI/Table/Table';\r\n\r\nimport '../SportsDashboard.css';\r\n\r\nconst nba = (props) => {\r\n    const data = props.data;\r\n    let standingsHeaders = ['', 'Team', 'Record', 'Win%', 'Home', 'Road', 'L10'];\r\n    let counter = 0;\r\n    let eastStandings = data.standings.map(i => {\r\n        let clinched = i.data.ClinchIndicator.trim() === '- x' ? '(x)' : null;\r\n        if(i.conference === 'East'){\r\n            counter++;\r\n            return <tr key={i.rank}>\r\n            <td>{counter}</td>\r\n            <td>{/*i.team_city*/}{i.team_name} {clinched}</td>\r\n            <td>{i.data.Record}</td>\r\n            <td>{(Number(i.data.WinPCT) * 100).toFixed(2)}</td>\r\n            <td>{i.data.HOME}</td>\r\n            <td>{i.data.ROAD}</td>\r\n            <td>{i.data.L10}</td>\r\n        </tr>\r\n        }\r\n    });\r\n    counter = 0;\r\n    let westStandings = data.standings.map(i => {\r\n        let clinched = i.data.ClinchIndicator.trim() === '- x' ? '(x)' : null;\r\n        if(i.conference === 'West'){\r\n            counter++;\r\n            return <tr key={i.rank}>\r\n            <td>{counter}</td>\r\n            <td>{/*i.team_city*/}{i.team_name} {clinched}</td>\r\n            <td>{i.data.Record}</td>\r\n            <td>{(Number(i.data.WinPCT) * 100).toFixed(2)}</td>\r\n            <td>{i.data.HOME}</td>\r\n            <td>{i.data.ROAD}</td>\r\n            <td>{i.data.L10}</td>\r\n        </tr>\r\n        }\r\n    });\r\n    let leadersHeaders = ['Player', 'PTS', 'FG %', '3P %', 'FT %' ]\r\n    let overAllleaders = data.leaders.map(i => {\r\n        if(i.scope === 'All+Players'){\r\n        return <tr key={i.rank}>\r\n            <td>{i.player === undefined ? i.PLAYER : i.player}</td>\r\n            <td>{i.stats.PTS}</td>\r\n            <td>{(Number(i.stats.FG_PCT) * 100).toFixed(2)}</td>\r\n            <td>{(Number(i.stats.FG3_PCT) * 100).toFixed(2)}</td>\r\n            <td>{(Number(i.stats.FT_PCT) * 100).toFixed(2)}</td>\r\n            </tr>\r\n        };\r\n    });\r\n    let rookieLeaders = data.leaders.map(i => {\r\n        if(i.scope === 'Rookies'){\r\n            return <tr key={i.rank}>\r\n            <td>{i.player === undefined ? i.PLAYER : i.player}</td>\r\n            <td>{i.stats.PTS}</td>\r\n            <td>{(Number(i.stats.FG_PCT) * 100).toFixed(2)}</td>\r\n            <td>{(Number(i.stats.FG3_PCT) * 100).toFixed(2)}</td>\r\n            <td>{(Number(i.stats.FT_PCT) * 100).toFixed(2)}</td>\r\n            </tr>\r\n        }\r\n    });\r\n    return ( \r\n        <Aux>\r\n            <div className=\"nba-content\">\r\n            <Table \r\n                title={\"Eastern Conference\"}\r\n                contents={eastStandings}\r\n                headers={standingsHeaders}\r\n            />\r\n            </div> \r\n            <div className=\"nba-content\">\r\n            <Table \r\n                title={\"Western Conference\"}\r\n                contents={westStandings}\r\n                headers={standingsHeaders}\r\n            />\r\n            </div>\r\n            <div className=\"nba-content-last\">\r\n            <Table \r\n                title={\"Scoring Leaders\"}\r\n                contents={overAllleaders}\r\n                headers={leadersHeaders}\r\n            />\r\n            <Table \r\n                title={\"Rookie Leaders\"}\r\n                contents={rookieLeaders}\r\n                headers={leadersHeaders}\r\n            />\r\n            </div>\r\n        </Aux>\r\n     );\r\n}\r\n \r\nexport default nba;","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Table from '../../../UI/Table/Table';\r\n\r\nimport '../SportsDashboard.css';\r\n\r\n\r\nconst soccer = (props) => {\r\n    const data = props.data;\r\n    let standingsHeaders = [\r\n        'Team', 'Matches', 'Won', \r\n        'Lost', 'Draw', 'PTS', 'GF', 'GA',\r\n        'GD'\r\n        ];\r\n    let standings = data.standings.map(i => {\r\n            return <tr key={i.rank}>\r\n            <td><img src={i.crest} className=\"contain\" alt=''/> {i.team}</td>\r\n            <td>{i.data.playedGames}</td>\r\n            <td>{i.data.won}</td>\r\n            <td>{i.data.lost}</td>\r\n            <td>{i.data.draw}</td>\r\n            <td>{i.data.points}</td>\r\n            <td>{i.data.goalsFor}</td>\r\n            <td>{i.data.goalsAgainst}</td>\r\n            <td>{i.data.goalDifference}</td>\r\n        </tr>\r\n    }); \r\n    let leaderHeaders = ['Name', 'Nationality', 'Team', 'Goals'];\r\n    let leaders = data.leaders.map(i => {\r\n        return <tr key={i.name}>\r\n        <td>{i.name}</td>\r\n        <td>{i.nationality}</td>\r\n        <td>{i.team}</td>\r\n        <td>{i.number_goals}</td>\r\n    </tr>\r\n}); \r\n        \r\n    return ( \r\n        <Aux>\r\n            <div className=\"soccer-content\">\r\n            <Table \r\n                title={\"EPL Table\"}\r\n                contents={standings}\r\n                headers={standingsHeaders}\r\n            />\r\n            </div> \r\n            <div className=\"soccer-content\">\r\n            <Table \r\n                title={\"Top Scorers\"}\r\n                contents={leaders}\r\n                headers={leaderHeaders}\r\n            />\r\n            </div> \r\n        </Aux>\r\n     );\r\n}\r\n \r\nexport default soccer;","import React from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Nba from './Nba/Nba';\r\nimport Soccer from './Soccer/Soccer';\r\n\r\nimport './SportsDashboard.css';\r\n\r\nconst sportsDashboard = (props) => {\r\n    const contents = {\r\n        'nba': <Nba \r\n                    data ={props.data}\r\n                />,\r\n        'soccer': <Soccer \r\n                    data={props.data}\r\n                 />\r\n    }\r\n    let content = contents[props.title];\r\n    return ( \r\n        <Aux>\r\n            <h3 className=\"dash-title\">{props.title.toUpperCase()}</h3>\r\n            <div className=\"s-container\">\r\n                {content}\r\n            </div>     \r\n        </Aux>\r\n     );\r\n}\r\n \r\nexport default sportsDashboard;","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Table from '../../../UI/Table/Table';\r\n\r\nimport '../Scoreboard.css';\r\n\r\nfunction cleanQuarters(data) {\r\n    for(let each in data){\r\n        try{\r\n            let qs = data[each]['quarter_scores']\r\n            let qtrs = qs.replace('{', '').replace('}', '').split(',');\r\n            let qtrScore = {'total': 0};\r\n            for(let x = 0; x < qtrs.length; x++){\r\n                let qtr = Number(qtrs[x].split(':')[0].trim())\r\n                let score = Number(qtrs[x].split(':')[1].trim())\r\n                if(qtr <= 4 ){\r\n                    qtrScore[String(qtr)] = score;\r\n                }else if (score > 0){\r\n                    qtrScore[String(qtr)] = score;\r\n                }\r\n                qtrScore['total'] += score\r\n            };\r\n            data[each]['quarter_scores'] =  qtrScore\r\n        }catch(err){};\r\n    }\r\n    return data;\r\n};\r\n\r\nconst nbaScoreboard = (props) => {\r\n    const data = cleanQuarters(props.data);\r\n    let gameIDs = [];\r\n    let nba = data.map(i => {\r\n        for(let x = 0; x < data.length; x++){\r\n            let d = data[x];\r\n            if(!gameIDs.includes(data[x].game_id) &&\r\n                d.game_id === i.game_id && \r\n                d.team_abbr !== i.team_abbr){\r\n                    gameIDs.push(i.game_id );\r\n                    let game = [i,d];\r\n                    let headers = [i.game_date, '1', '2', '3' , '4', ''];\r\n                    let tableContents = game.map(g => {\r\n                    return <tr key={g.game_id}>\r\n                            <td className=\"team-name\"><u>{g.team_city_name} {g.team_name}</u> ({g.record})</td>\r\n                            <td className=\"team\">{g.quarter_scores['1']}</td>\r\n                            <td className=\"team\">{g.quarter_scores['2']}</td>\r\n                            <td className=\"team\">{g.quarter_scores['3']}</td>\r\n                            <td className=\"team\">{g.quarter_scores['4']}</td>\r\n                            <td className=\"total\">{g.quarter_scores['total']}</td>\r\n                        </tr>\r\n                            });\r\n                        return <Aux>\r\n                                <div className=\"sbInfo\">\r\n                                        <Table\r\n                                            headers={headers}  \r\n                                            contents={tableContents}\r\n                                        />\r\n                                </div>\r\n                            </Aux>\r\n                    }\r\n            }\r\n        });\r\n    if(data.length <= 0){\r\n    nba = <div className=\"sbInfo\">\r\n            <Table\r\n                headers={['No Games Today']}  \r\n                contents={null}\r\n            />\r\n        </div>\r\n    }\r\n    return ( \r\n        <div className=\"scoreboard-container\">\r\n            {nba}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default nbaScoreboard;","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Table from '../../../UI/Table/Table';\r\n\r\nconst soccerScoreboard = (props) => {\r\n    const data = props.data;\r\n    let matches = data.map(i => {\r\n        let date = i.data.date;\r\n        let status = i.data.status;\r\n            return <div className=\"sbInfo\">\r\n                            <Table\r\n                                headers={[`${date} (Day: ${i.matchday})`, status]}  \r\n                                contents={\r\n                                <Aux>\r\n                                    <tr key={i.home_team}>\r\n                                        <td className=\"team-name\"><u>{i.home_team}</u></td>\r\n                                        <td className=\"team\">{i.data.fullTime.home}</td>\r\n                                    </tr>\r\n                                    <tr key={i.away_team}>\r\n                                        <td className=\"team-name\"><u>{i.away_team}</u></td>\r\n                                        <td className=\"team\">{i.data.fullTime.away}</td>\r\n                                    </tr>\r\n                                </Aux>\r\n                                }\r\n                            />\r\n                    </div>\r\n    });\r\n    if(data.length <= 0){\r\n        matches = <div className=\"sbInfo\">\r\n                <Table\r\n                    headers={['No Games Today']}  \r\n                    contents={null}\r\n                />\r\n            </div>\r\n    };\r\n    return ( \r\n        <div className=\"scoreboard-container\">\r\n            {matches}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default soccerScoreboard;","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Table from '../../../UI/Table/Table';\r\n\r\nconst nflScoreboard = (props) => {\r\n    const data = props.data;\r\n    let key = 0;\r\n    let games = data.map(i => {\r\n        let qtr = i.data.qtr;\r\n        let rem = i.data.rem_time;\r\n        let odds = i.data.odds;\r\n        let time_date = i.time_date.substring(0, i.time_date.length-15);\r\n        key++;\r\n        return <div className=\"sbInfo-nfl\">\r\n                        <Table\r\n                            headers={[`${time_date}`, `QTR: ${qtr} ${rem}`]}\r\n                            contents={\r\n                            <Aux>\r\n                                <tr key={i.current_week}>\r\n                                    <td>Week: {i.current_week} {i.season}</td>\r\n                                </tr>\r\n                                <tr key={key}>\r\n                                    <td>Favorite: <b>{odds}</b></td>\r\n                                </tr>\r\n                                <tr key={i.home_team}>\r\n                                    <td><img className=\"contain\" src={i.data.home_team_logo} alt=''/> <u>{i.home_team}</u></td>\r\n                                    <td className=\"team-name\">{i.data.home_team_score}</td>\r\n                                </tr>\r\n                                <tr key={i.away_team}>\r\n                                    <td><img className=\"contain\" src={i.data.away_team_logo} alt=''/> <u>{i.away_team}</u></td>\r\n                                    <td className=\"team-name\">{i.data.away_team_score}</td>\r\n                                </tr>\r\n                            </Aux>\r\n                            }\r\n                        />\r\n                </div>\r\n    });\r\n    if(data.length <= 0){\r\n        games = <div className=\"sbInfo-nfl\">\r\n                <Table\r\n                    headers={['No Games Today']}  \r\n                    contents={null}\r\n                />\r\n            </div>\r\n    };\r\n    return ( \r\n        <div className=\"scoreboard-container\">\r\n            {games}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default nflScoreboard;","import React from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport Nba from './NbaScoreboard/NbaScoreboard';\r\nimport Soccer from './SoccerScoreboard/SoccerScoreboard';\r\nimport Nfl from './NFLScoreboard/NFLScoreboard';\r\n\r\nimport './Scoreboard.css';\r\n\r\nconst scoreboard = (props) => {\r\n    const data = props.data;\r\n    return ( \r\n        <Aux>\r\n            <h3 className=\"dash-title\">Scores</h3>\r\n            <h3 className=\"dash-title-nba\">NBA</h3>\r\n            <h3 className=\"dash-title-epl\">EPL</h3>\r\n            <h3 className=\"dash-title-nfl\">NFL</h3>\r\n            <div className=\"s-container\">\r\n                    <Nfl \r\n                        data={data.nfl}\r\n                    />\r\n                    <Soccer\r\n                        data={data.soccer}\r\n                    />\r\n                    <Nba \r\n                        data={data.nba}\r\n                    />\r\n            </div> \r\n            <Button btnType={\"submit\"} clicked={props.refreshScoreboard} val={'scoreboard'}>Refresh</Button>\r\n        </Aux>\r\n    );\r\n}\r\n \r\nexport default scoreboard;\r\n","import React from 'react';\r\n\r\nimport Aux from '../hoc/Auxiliary';\r\nimport Dashboard from './SportsDashboard/SportsDashboard';\r\nimport Scoreboard from './Scoreboard/Scoreboard';\r\n\r\nconst sports = (props) => {\r\n    const data = props.data;\r\n    let ele = null;\r\n    let dash = [];\r\n    let scoreboard = {};\r\n    for (let key in data){\r\n        if(key === 'nba' || key === 'soccer'){ /// \r\n        ele = <Dashboard\r\n            title={key}\r\n            data={data[key]}\r\n        />\r\n        dash.push(ele)\r\n        };\r\n        scoreboard[`${key}`] = data[key].scoreboard;\r\n    };\r\n    let scoreboardDash = <Scoreboard\r\n                            title={'Games'}\r\n                            data={scoreboard}\r\n                            refreshScoreboard={props.refreshScoreboard}\r\n                        />\r\n\r\n    return ( \r\n        <Aux>\r\n            {scoreboardDash}\r\n            {dash}\r\n        </Aux>\r\n\r\n     );\r\n}\r\n \r\nexport default sports;\r\n","import axios from 'axios';\r\n\r\nexport default class GET {\r\n    init(view, arg) { // ex. 'Weather', 'init';\r\n        const url = `/${view}/${arg}`;\r\n        return axios.get(url)\r\n    };\r\n\r\n    search(view, query) { // ex. 'Weather', 'Honolulu';\r\n        const url = `/${view}/query=${query}`;\r\n        return axios.get(url, query)\r\n    };\r\n}","import axios from 'axios';\r\n\r\nexport default class POST {\r\n    add(view, arg) {\r\n        const url = `/${view}/${arg}`;\r\n        return axios.post(url, arg)\r\n    };\r\n}","import axios from 'axios';\r\n\r\nexport default class DEL {\r\n    delete(view, id) {\r\n        const url = `/${view}/${id}`;\r\n        return axios.delete(url, id)\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Aux from '../Components/hoc/Auxiliary';\r\nimport Loading from '../Components/UI/Loading/Loading';\r\nimport Calendar from '../Components/Calendar/Calendar';\r\nimport Notes from '../Components/Notes/Notes';\r\nimport Weather from '../Components/Weather/Weather';\r\nimport Finance from '../Components/Finance/Finance';\r\nimport Sports from '../Components/Sports/Sports';\r\n\r\nimport GET from '../axios/GET';\r\nimport POST from '../axios/POST';\r\nimport DEL from '../axios/DEL';\r\n\r\nconst get = new GET()\r\nconst post = new POST()\r\nconst del = new DEL()\r\n\r\nclass Content extends Component {\r\n    state = { \r\n        loading: false,\r\n        view: '',\r\n        data: '',\r\n        forms: {\r\n            calendar: {\r\n                name: '',\r\n                description: '',\r\n                targetDate: '',\r\n                time: '',\r\n                recurring: false,\r\n                interval: 7,\r\n                color: '4ecdc4'\r\n            },\r\n            notes: {\r\n                id: '',    \r\n                text: '',\r\n                color: 'F0E68C'\r\n            },\r\n            finance: {\r\n                stockSymbol: '',\r\n                shareCount: '',\r\n                pricePerShare: '',\r\n                date: ''\r\n            },\r\n            search: {\r\n                query: ''\r\n            }\r\n        },\r\n        searchReturns: ''\r\n    };\r\n\r\n    updateData = (view) => {\r\n        this.setState({loading: true});\r\n        const self = this;\r\n        get.init(view, 'init') \r\n        .then((result) => {\r\n            result = result.data\r\n            let data = 'None';\r\n            if (result.status === 200){\r\n                let r = result.text;\r\n                data = r['data'].replace(/'/g, '\"');\r\n                if (data !== 'None'){\r\n                    data = JSON.parse(data);\r\n                };\r\n            };\r\n            self.setState({\r\n                loading: false,\r\n                view: view,\r\n                data: data,\r\n                forms: {\r\n                    calendar: {\r\n                        name: '',\r\n                        description: '',\r\n                        targetDate: '',\r\n                        time: '',\r\n                        recurring: false,\r\n                        interval: 7,\r\n                        color: '4ecdc4'\r\n                    },            \r\n                    notes: {  \r\n                        id: '',      \r\n                        text: '',\r\n                        color: 'F0E68C'\r\n                    },\r\n                    finance: {\r\n                        stockSymbol: '',\r\n                        shareCount: '',\r\n                        pricePerShare: ''\r\n                    },\r\n                    search: {\r\n                        query: '',\r\n                    }\r\n                },\r\n                searchReturns: ''\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        let viewContent = this.props.viewContent;\r\n        this.updateData(viewContent);\r\n    };\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.viewContent !== prevProps.viewContent){\r\n            let viewContent = this.props.viewContent;\r\n            this.updateData(viewContent);\r\n        }\r\n    };\r\n\r\n    formUpdateHandler = (event) => {\r\n        console.log(event);\r\n        let newState = this.state.forms; \r\n        let formValue = event.target.value; // field value\r\n        let formName = event.target.name; // calendar, weather etc.\r\n        let formField = ''\r\n        try {formField = event.target.getAttribute('id');} // spec field name\r\n        catch(err){formField = event.target['id'];}\r\n\r\n        const boolFields = ['recurring'];\r\n        if(boolFields.includes(formField)){\r\n            formValue = newState[formName][formField] ? false : true;\r\n        };\r\n        newState[formName][formField] = formValue;\r\n        this.setState({\r\n            forms: newState\r\n        });\r\n    };\r\n\r\n    formSubmitHandler = (event) => {\r\n        const view = this.state.view;\r\n        let obj = '';\r\n        if(view === 'Calendar'){\r\n            obj = JSON.stringify(this.state.forms.calendar);\r\n        }else if(view === 'Notes'){\r\n            let notes = this.state.forms.notes;\r\n            notes.text = notes.text.replace(/\\n/g, 'newline');\r\n            obj = JSON.stringify(notes);\r\n            console.log(obj)\r\n        }else if(view === 'Weather'){\r\n            let vals = event.target.value.split(',');\r\n            obj = JSON.stringify({\r\n                'city': vals[0],\r\n                'woied': vals[1]\r\n            });\r\n        }else if(view === 'Finance'){\r\n            if(this.state.forms.finance.stockSymbol === ''){\r\n                let vals = event.target.value.split(',');\r\n                obj = JSON.stringify({\r\n                    'stock_symbol': vals[0],\r\n                    'name': vals[1]\r\n                });\r\n            }else{\r\n                obj = JSON.stringify(this.state.forms.finance);\r\n            }\r\n        };\r\n        post.add(view, obj).then(() => {\r\n            this.updateData(view)\r\n        });\r\n    };\r\n\r\n    searchSubmitHandler = () => {\r\n        const view = this.state.view;\r\n        let formState = this.state.forms;\r\n        let obj = formState.search.query;\r\n        if (obj !== '') {\r\n            this.setState({loading: true});\r\n            let newSearchReturns = this.state.searchReturns;\r\n            let self = this;\r\n            get.search(view, obj).then((result) => {\r\n                let r = result.data.text;\r\n                console.log(r)\r\n                let data = r['data'].replace(/'/g, '\"');\r\n                newSearchReturns = JSON.parse(data);\r\n                formState.search.query = '';\r\n                self.setState({\r\n                    loading: false,\r\n                    forms: formState,\r\n                    searchReturns: newSearchReturns,\r\n                })\r\n            });\r\n        } else {\r\n            this.updateData(view); //if no search reset state\r\n        }\r\n    }\r\n\r\n    deleteHandler = (t) => {\r\n        this.setState({loading: true});\r\n        const view = this.state.view;\r\n        let id = t.target.value;\r\n        del.delete(view, id).then(() => {\r\n            this.updateData(view);\r\n        });\r\n    };\r\n    \r\n    forceRefreshDataHandler = (t) => {\r\n        this.setState({loading: true});\r\n        const view = this.state.view;\r\n        const a = 'refresh';\r\n        const id = t.target.value;\r\n        const action = [`${a}=${id}`];\r\n        get.init(view, action).then(() => {\r\n            this.updateData(view);\r\n        });\r\n    };\r\n\r\n    render() { \r\n        console.log(this.state);\r\n        let view = null;\r\n        const views = {\r\n            'Calendar': <Calendar \r\n                            data={this.state.data}\r\n                            cForm={this.state.forms.calendar} \r\n                            //handlers\r\n                            cFormHandler={this.formUpdateHandler}\r\n                            taskSubmitHandler={this.formSubmitHandler}\r\n                            taskDeleteHandler={this.deleteHandler}\r\n                        />,\r\n            'Notes': <Notes \r\n                        data={this.state.data}\r\n                        nForm={this.state.forms.notes}\r\n                        //handlers\r\n                        addNote={this.formSubmitHandler}\r\n                        removeNote={this.deleteHandler}\r\n                        notesFormHandler={this.formUpdateHandler}\r\n                    />,\r\n            'Weather': <Weather \r\n                            data={this.state.data}\r\n                            searchData={this.state.searchReturns}\r\n                            searchFormState={this.state.forms.search}\r\n                            // handlers\r\n                            searchOnChange={this.formUpdateHandler}\r\n                            searchSubmit={this.searchSubmitHandler}\r\n                            addLocation={this.formSubmitHandler}\r\n                            removeConfig={this.deleteHandler}\r\n                            refreshForecast={this.forceRefreshDataHandler}\r\n                        />,\r\n            'Finance': <Finance\r\n                            data={this.state.data}\r\n                            searchData={this.state.searchReturns}\r\n                            searchFormState={this.state.forms.search}\r\n                            inputFormState={this.state.forms.finance} \r\n                            //handlers\r\n                            searchOnChange={this.formUpdateHandler}\r\n                            searchSubmit={this.searchSubmitHandler}\r\n                            addFund={this.formSubmitHandler}\r\n                            removeFund={this.deleteHandler}\r\n                            refreshFund={this.forceRefreshDataHandler}\r\n                            inputFormOnChange={this.formUpdateHandler}\r\n                            inputFormSubmit={this.formSubmitHandler}\r\n                            removeTransaction={this.deleteHandler}\r\n                        />,\r\n            'Sports': <Sports \r\n                            data={this.state.data}\r\n                            //handlers\r\n                            refreshScoreboard={this.forceRefreshDataHandler}\r\n                        />\r\n                    };\r\n        try{\r\n            view = this.state.loading ? <Loading /> : views[this.state.view];\r\n        }catch(err){\r\n            console.log(err);\r\n            view = <Aux>Null</Aux>;\r\n        };\r\n        return ( \r\n            <div>\r\n                {view}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Content;","import React from 'react';\n\nimport Layout from './Containers/Layout';\nimport Content from './Containers/Content';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n      <Content />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}